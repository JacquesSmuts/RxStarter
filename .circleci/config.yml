version: 2
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-25-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

  tests:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-25-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Run KtLint
          command: ./gradlew ktlint
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - run:
          name: Run Lint Test
          command: ./gradlew lintStagingDebug
      - run:
          name: Run Tests
          command: ./gradlew lint test
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results

  deploy_live:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-25-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Decode and store Keystore
          command: |
            echo $ENCODED_KEYSTORE | base64 --decode >> ${HOME}/keystore
            echo 'export KEYSTORE=${HOME}/keystore' >> $BASH_ENV
      - run:
          name: Decode and store Keystore
          command: |
            echo $DEPLOYMENT_PRIVATE_KEY | base64 --decode >> ${HOME}/rxstarter_pk.json
            echo 'export PRIVATE_KEY=${HOME}/rxstarter_pk.json' >> $BASH_ENV
      - run:
          name: Upload to Google Play
          command: ./gradlew publishProductionRelease

  deploy_staging:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-25-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Decode and store Keystore
          command: |
            echo $ENCODED_KEYSTORE | base64 --decode >> ${HOME}/keystore
            echo 'export KEYSTORE=${HOME}/keystore' >> $BASH_ENV
      - run:
          name: Decode and store Keystore
          command: |
            echo $DEPLOYMENT_PRIVATE_KEY | base64 --decode >> ${HOME}/rxstarter_pk.json
            echo 'export PRIVATE_KEY=${HOME}/rxstarter_pk.json' >> $BASH_ENV
      - run:
          name: Upload to Google Play
          command: ./gradlew publishStagingRelease

  - run:
          name: Build debug APK and release APK
          command: |
            ./gradlew :app:assembleDebug
            ./gradlew :app:assembleDebugAndroidTest
      - run:
          name: Store Google Service Account
          command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
      - run:
          name: Authorize gcloud and set config defaults
          command: |
            echo $GCLOUD_SERVICE_KEY | base64 --decode | sudo gcloud auth activate-service-account --key-file=-
            sudo gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
      - run:
          name: Test with Firebase Test Lab
          command: >
            sudo gcloud firebase test android run
              --app <local_server_path>/<app_apk>.apk
              --test <local_server_path>/<app_test_apk>.apk
              --results-bucket cloud-test-${GOOGLE_PROJECT_ID}
      - run:
          name: Install gsutil dependency and copy test results data
          command: |
            sudo pip install -U crcmod
            sudo gsutil -m cp -r -U `sudo gsutil ls gs://[BUCKET_NAME]/[OBJECT_NAME] | tail -1` ${CIRCLE_ARTIFACTS}/ | true

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - tests:
          requires:
            - build
      - deploy_live:
          requires:
            - build
            - tests
          filters:
            branches:
              only:
              - master
      - deploy_staging:
          requires:
            - build
            - tests
          filters:
            branches:
              only:
              - develop
              - release
